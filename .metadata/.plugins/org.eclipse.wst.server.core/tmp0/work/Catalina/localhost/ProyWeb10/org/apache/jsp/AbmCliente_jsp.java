/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.28
 * Generated at: 2013-02-03 23:25:19 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import Base.metodosSql;
import java.util.*;

public final class AbmCliente_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("function rellenar(){\r\n");
      out.write("\t\r\n");
      out.write("\tvar indice = document.modificacion.clientes.selectedIndex;\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\tvar valor = document.modificacion.clientes[indice].value; \r\n");
      out.write("\tvalor=valor.replace(/[^a-zA-Z 0-9.]+/g,' ');\r\n");
      out.write("\t\r\n");
      out.write("\tdocument.modificacion.nuevoValor.value=valor.toString();\r\n");
      out.write("\t\r\n");
      out.write("}</script>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\r\n");
      out.write("<title>Abm de Clientes</title>\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"style/style.css\" />\r\n");
      out.write("</head>\r\n");
      out.write("<body bgcolor=\"#E6E6E6\">\r\n");
      out.write("<a>Bienvenido al Alta,Baja,Modificación de Clientes.</a><br>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

session.setAttribute("solicitaAbm", "AbmCliente");


String accion=request.getParameter("accion");
session.setAttribute("accion", accion);

out.println("Que hago? :"+ accion);



//request.getParameter("abm"); es el que hay que usar para saber accion a tomar


metodosSql metodos=new metodosSql();
int nroClienteSugerido=Integer.parseInt(metodos.consultarUnaColumna("SELECT max(idCliente) FROM proyectoweb.cliente;").get(0));
nroClienteSugerido++;
if(accion.equals("Alta"))
{ out.println("Eligió dar de alta un nuevo cliente, complete los campos sin dejar espacios. ");

      out.write("\r\n");
      out.write("\r\n");
      out.write("<form name=\"alta\" action=\"AbmCommitter.jsp\" method=\"post\">\r\n");
      out.write("\t\t<table border=\"3\" align=\"left\">\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td>Razón Social</td>\r\n");
      out.write("\t\t\t\t<td><input name=\"razonSocial\" value=\"\" /></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td>Cliente Nro°</td>\r\n");
      out.write("\t\t\t\t<td><input name=\"numeroCliente\" value=\"");
      out.print(nroClienteSugerido);
      out.write("\" /></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\r\n");
      out.write("\t\t<br><br><br><br><input type=\"submit\" value=\"Crear Cliente\"/>\r\n");
      out.write("\t</form>\r\n");
      out.write("\t<br><br><br>\r\n");
      out.write("\t<a>Se sugiere que no modifique el numero de cliente, a menos que lo necesite, pero si lo hace, coloque un número mayor al sugerido. </a>\r\n");
 
}
else if(accion.equals("Baja"))
{

	
      out.write("<form name=\"baja\" action=\"AbmCommitter.jsp\" method=\"post\">");

	out.println("Eligio dar de baja un cliente, seleccione de la lista desplegable.<br><br>");


 

metodosSql metodos2=new metodosSql();
ArrayList<String>clientes=metodos2.consultarUnaColumna("select descripcion from cliente where Inhabilitado='NO' order by descripcion");
out.println("Clientes");

out.println(" <select name=" + " clientes " + ">");

for (int i = 0; i < clientes.size(); i++)
	//encodeURIComponent(unencoded) para javascript
	//java.net.URLEncoder.encode(usuarios.get(i), "UTF-8")
	out.println(" <option value=" + java.net.URLEncoder.encode(clientes.get(i), "UTF-8") + ">"
			+ clientes.get(i) + "</option>");

out.println("</select>");
out.println("<br>");



      out.write("<input type=\"submit\" value=\"Borrar!\"></input>\r\n");
      out.write("\r\n");
      out.write("</form>");

}
else if(accion.equals("Modificacion"))
{

	
      out.write("<form name=\"modificacion\" action=\"AbmCommitter.jsp\" method=\"post\">");

	out.println("Eligio modificar un cliente, seleccione de la lista desplegable.<br><br>");

metodosSql metodos3=new metodosSql();
ArrayList<String>clientes=metodos3.consultarUnaColumna("select descripcion from cliente where Inhabilitado='NO' order by descripcion");
out.println("Clientes");

out.println(" <select name=" + " clientes " + "onChange='rellenar()'>");

for (int i = 0; i < clientes.size(); i++)
	//encodeURIComponent(unencoded) para javascript
	//java.net.URLEncoder.encode(usuarios.get(i), "UTF-8")
	out.println(" <option value=" + java.net.URLEncoder.encode(clientes.get(i), "UTF-8") + ">"
			+ clientes.get(i) + "</option>");

out.println("</select>");
out.println("<br>");





      out.write("\r\n");
      out.write("<a>Ingrese aquí el nuevo nombre del cliente</a>\r\n");
      out.write("<br><input name=\"nuevoValor\" value=\"\" size=\"40\">\r\n");
      out.write("<br>\r\n");
      out.write("<input type=\"submit\" value=\"Modificar\"></input>\r\n");
      out.write("\r\n");
      out.write("</form>");

}

      out.write("\r\n");
      out.write("\r\n");
      out.write("<br>\r\n");
      out.write("<a href=\"MenuABM.jsp\" >Volver a ABM</a><br>\r\n");
      out.write("<a href=\"MenuPpal.jsp\" >Volver a menu principal</a>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else log(t.getMessage(), t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
